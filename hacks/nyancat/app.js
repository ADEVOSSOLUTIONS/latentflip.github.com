// Generated by CoffeeScript 1.3.3
(function() {
  var $, canvas, context, drawing_head, drawing_jaw, effects, headPos, headtrackr, htracker, jawOffset, lastRotate, nyan, video, _,
    __slice = [].slice;

  $ = require('jquery-browserify');

  headtrackr = require('headtrackr');

  _ = require('underscore');

  video = document.getElementById('inputVideo');

  canvas = document.getElementById('inputCanvas');

  effects = document.getElementById('effectCanvas');

  context = effects.getContext('2d');

  htracker = new headtrackr.Tracker({
    calcAngles: true
  });

  htracker.init(video, canvas);

  htracker.start();

  navigator.webkitGetUserMedia({
    audio: true
  }, function(stream) {
    var aContext, analyser, fftBins, sourceNode;
    aContext = new webkitAudioContext();
    sourceNode = aContext.createMediaStreamSource(stream);
    analyser = aContext.createAnalyser();
    analyser.smoothingTimeConstant = 0.1;
    sourceNode.connect(analyser);
    fftBins = new Float32Array(analyser.fftSize);
    return setInterval(function() {
      var max;
      analyser.getFloatFrequencyData(fftBins);
      max = _.chain(fftBins).filter(function(v) {
        return v < 0;
      }).max().value();
      max = (80 + max) / 3;
      max = Math.max(0, max);
      return nyan.jawOffset = max;
    }, 100);
  });

  headPos = [0, 0];

  jawOffset = 0;

  drawing_head = new Image();

  drawing_head.src = "nyancathead2.png";

  drawing_jaw = new Image();

  drawing_jaw.src = "nyancatjaw2.png";

  nyan = {
    jawOffset: 0,
    width: 10,
    height: 10
  };

  drawing_head.onload = function() {
    return nyan = {
      width: drawing_head.width,
      height: drawing_head.height
    };
  };

  lastRotate = null;

  $(document).on('facetrackingEvent', function(ev) {
    var face, height, jawPos, offset, width;
    ev = ev.originalEvent;
    face = ev;
    face.angle = face.angle - (Math.PI / 2);
    height = face.height;
    width = nyan.width * (height / nyan.height);
    offset = nyan.jawOffet * (height / nyan.height);
    if (lastRotate) {
      context.translate(lastRotate.x, lastRotate.y);
      context.rotate(-1 * lastRotate.angle);
      context.translate(-1 * lastRotate.x, -1 * lastRotate.y);
      context.clearRect(0, 0, 640, 480);
    }
    context.translate(face.x, face.y);
    context.rotate(face.angle);
    context.translate(-1 * face.x, -1 * face.y);
    lastRotate = {
      angle: face.angle,
      x: face.x,
      y: face.y
    };
    headPos = [ev.x - width / 2, ev.y - height / 2 - (0.15 * height), width, height];
    jawPos = [ev.x - width / 2, ev.y - (height / 2) - (0.15 * height) + nyan.jawOffset, width, height];
    context.drawImage.apply(context, [drawing_head].concat(__slice.call(headPos)));
    return context.drawImage.apply(context, [drawing_jaw].concat(__slice.call(jawPos)));
  });

}).call(this);
